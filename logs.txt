(base) ➜  AI-Phone-Bank-POC git:(anthropic_api) ✗ poetry run heroku local:start
[OKAY] Loaded ENV .env File as KEY=VALUE Format
5:24:30 PM web.1    |  [2024-09-15 17:24:30 -0400] [8151] [INFO] Starting gunicorn 20.1.0
5:24:30 PM web.1    |  [2024-09-15 17:24:30 -0400] [8151] [INFO] Listening at: http://0.0.0.0:5006 (8151)
5:24:30 PM web.1    |  [2024-09-15 17:24:30 -0400] [8151] [INFO] Using worker: geventwebsocket.gunicorn.workers.GeventWebSocketWorker
5:24:30 PM web.1    |  [2024-09-15 17:24:30 -0400] [8153] [INFO] Booting worker with pid: 8153
5:24:32 PM worker.1 |  Registering routes
5:24:32 PM worker.1 |  Project directory is /Users/oblet/Documents/GitHub/AI-Phone-Bank-POC
5:24:32 PM worker.1 |  CORS has been configured
5:24:32 PM worker.1 |   -------------- celery@MacBook-Pro.local v5.3.4 (emerald-rush)
5:24:32 PM worker.1 |  --- ***** ----- 
5:24:32 PM worker.1 |  -- ******* ---- macOS-14.6.1-arm64-arm-64bit 2024-09-15 17:24:32
5:24:32 PM worker.1 |  - *** --- * --- 
5:24:32 PM worker.1 |  - ** ---------- [config]
5:24:32 PM worker.1 |  - ** ---------- .> app:         context.context:0x104555750
5:24:32 PM worker.1 |  - ** ---------- .> transport:   redis://127.0.0.1:6379/0
5:24:32 PM worker.1 |  - ** ---------- .> results:     disabled://
5:24:32 PM worker.1 |  - *** --- * --- .> concurrency: 2 (prefork)
5:24:32 PM worker.1 |  -- ******* ---- .> task events: OFF (enable -E to monitor tasks in this worker)
5:24:32 PM worker.1 |  --- ***** ----- 
5:24:32 PM worker.1 |   -------------- [queues]
5:24:32 PM worker.1 |                  .> celery           exchange=celery(direct) key=celery
5:24:32 PM worker.1 |  [tasks]
5:24:32 PM worker.1 |    . tasks.campaign_analysis.evaluate_interaction
5:24:32 PM worker.1 |    . tasks.campaign_analysis.summarize_campaign
5:24:32 PM worker.1 |    . tasks.campaign_analysis.update_voter_profile
5:24:32 PM worker.1 |    . tasks.initialize_interaction.initialize_interaction
5:24:32 PM worker.1 |    . tasks.initialize_sender_voter_relationships.initialize_sender_voter_relationships
5:24:32 PM worker.1 |    . tasks.make_robo_call.make_robo_call_task
5:24:32 PM worker.1 |    . tasks.process_inbound_message.process_inbound_message
5:24:32 PM worker.1 |    . tasks.process_twilio_callback.process_twilio_callback
5:24:32 PM worker.1 |    . tasks.send_email.send_email
5:24:32 PM worker.1 |    . tasks.send_message.send_message
5:24:32 PM worker.1 |  [2024-09-15 17:24:32,517: WARNING/MainProcess] /Users/oblet/Library/Caches/pypoetry/virtualenvs/python-template-orp4cFuj-py3.10/lib/python3.10/site-packages/celery/worker/consumer/consumer.py:507: CPendingDeprecationWarning: The broker_connection_retry configuration setting will no longer determine
5:24:32 PM worker.1 |  whether broker connection retries are made during startup in Celery 6.0 and above.
5:24:32 PM worker.1 |  If you wish to retain the existing behavior for retrying connections on startup,
5:24:32 PM worker.1 |  you should set broker_connection_retry_on_startup to True.
5:24:32 PM worker.1 |    warnings.warn(
5:24:32 PM worker.1 |  [2024-09-15 17:24:32,521: INFO/MainProcess] Connected to redis://127.0.0.1:6379/0
5:24:32 PM worker.1 |  [2024-09-15 17:24:32,521: WARNING/MainProcess] /Users/oblet/Library/Caches/pypoetry/virtualenvs/python-template-orp4cFuj-py3.10/lib/python3.10/site-packages/celery/worker/consumer/consumer.py:507: CPendingDeprecationWarning: The broker_connection_retry configuration setting will no longer determine
5:24:32 PM worker.1 |  whether broker connection retries are made during startup in Celery 6.0 and above.
5:24:32 PM worker.1 |  If you wish to retain the existing behavior for retrying connections on startup,
5:24:32 PM worker.1 |  you should set broker_connection_retry_on_startup to True.
5:24:32 PM worker.1 |    warnings.warn(
5:24:32 PM worker.1 |  [2024-09-15 17:24:32,522: INFO/MainProcess] mingle: searching for neighbors
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,529: INFO/MainProcess] mingle: all alone
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,542: INFO/MainProcess] celery@MacBook-Pro.local ready.
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,546: INFO/MainProcess] Task tasks.process_inbound_message.process_inbound_message[8d78b1f6-771b-4ac9-8c18-a5f0355a043b] received
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,554: WARNING/ForkPoolWorker-2] Project directory is /Users/oblet/Documents/GitHub/AI-Phone-Bank-POC
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,559: WARNING/ForkPoolWorker-2] CORS has been configured
5:24:33 PM worker.1 |  2024-09-15 17:24:33,617 - logs.logger - INFO - Recieved message message body: What does he plan to do about affordable housing?
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,617: INFO/ForkPoolWorker-2] Recieved message message body: What does he plan to do about affordable housing?
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,803: WARNING/ForkPoolWorker-2] Event tracked successfully: Interaction Recieved
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,804: WARNING/ForkPoolWorker-2] {'code': 200, 'num_records_imported': 1, 'status': 'OK'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,812: WARNING/ForkPoolWorker-2] texting_agent calling an agent with prompt data: {'content': 'What does he plan to do about affordable housing?'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,824: WARNING/ForkPoolWorker-2] texting_agent available actions is: [{"class_name": "AlertCampaignTeam", "name": "alert_campaign_team", "description": "Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.", "parameters": [{"class_name": "FunctionProperty", "name": "campaign_id", "paramater_type": "string", "description": "The ID of the 
5:24:33 PM worker.1 |  >  outreach campaign this agent is texting for"}, {"class_name": "FunctionProperty", "name": "voter_id", "paramater_type": "string", "description": "The ID of the voter this agent is texting"}, {"class_name": "FunctionProperty", "name": "alert_message", "paramater_type": "string", "description": "The message to send to the campaign team member"}, {"class_name": "FunctionProperty", "name": "inbound_message", "paramater_type": "string", "description": "The message the voter sent"}, {"class_name": "Fu
5:24:33 PM worker.1 |  >  nctionProperty", "name": "voter_message", "paramater_type": "string", "description": "The message to send back to the voter when the campaign is alerted"}]}, {"class_name": "EndConversation", "name": "end_conversation", "description": "End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should not be used if the voter is just disinterested.", "parameters":
5:24:33 PM worker.1 |  >   [{"class_name": "FunctionProperty", "name": "campaign_id", "paramater_type": "string", "description": "The ID of the outreach campaign this agent is texting for"}, {"class_name": "FunctionProperty", "name": "voter_id", "paramater_type": "string", "description": "The ID of the voter this agent is texting"}, {"class_name": "FunctionProperty", "name": "ending_reason", "paramater_type": "string", "description": "The reason the conversation is ending"}, {"class_name": "FunctionProperty", "name": "in
5:24:33 PM worker.1 |  >  bound_message", "paramater_type": "string", "description": "The message the voter sent"}]}, {"class_name": "GetCandidateInformation", "name": "get_candidate_information", "description": "Get information about a candidates positions or background that you don't already have", "parameters": [{"class_name": "FunctionProperty", "name": "inbound_message", "paramater_type": "string", "description": "The message the voter sent"}, {"class_name": "FunctionProperty", "name": "query", "paramater_type": "st
5:24:33 PM worker.1 |  >  ring", "description": "The query that you want to search for. Should include a question about a specific policy or background information about the candidate"}, {"class_name": "FunctionProperty", "name": "sender_id", "paramater_type": "string", "description": "The ID of the sender this agent is texting for"}]}]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,825: WARNING/ForkPoolWorker-2] texting_agent available actions is a string
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,825: WARNING/ForkPoolWorker-2] texting_agent function_dicts is: [{'class_name': 'AlertCampaignTeam', 'name': 'alert_campaign_team', 'description': 'Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.', 'parameters': [{'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the out
5:24:33 PM worker.1 |  >  reach campaign this agent is texting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'alert_message', 'paramater_type': 'string', 'description': 'The message to send to the campaign team member'}, {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'Funct
5:24:33 PM worker.1 |  >  ionProperty', 'name': 'voter_message', 'paramater_type': 'string', 'description': 'The message to send back to the voter when the campaign is alerted'}]}, {'class_name': 'EndConversation', 'name': 'end_conversation', 'description': "End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should not be used if the voter is just disinterested.", 'parameters': [{
5:24:33 PM worker.1 |  >  'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'ending_reason', 'paramater_type': 'string', 'description': 'The reason the conversation is ending'}, {'class_name': 'FunctionProperty', 'name': 'inbou
5:24:33 PM worker.1 |  >  nd_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}]}, {'class_name': 'GetCandidateInformation', 'name': 'get_candidate_information', 'description': "Get information about a candidates positions or background that you don't already have", 'parameters': [{'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'FunctionProperty', 'name': 'query', 'paramater_type': 'strin
5:24:33 PM worker.1 |  >  g', 'description': 'The query that you want to search for. Should include a question about a specific policy or background information about the candidate'}, {'class_name': 'FunctionProperty', 'name': 'sender_id', 'paramater_type': 'string', 'description': 'The ID of the sender this agent is texting for'}]}]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,825: WARNING/ForkPoolWorker-2] Calling from_dict with function_dict: {'class_name': 'AlertCampaignTeam', 'name': 'alert_campaign_team', 'description': 'Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.', 'parameters': [{'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the
5:24:33 PM worker.1 |  >   outreach campaign this agent is texting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'alert_message', 'paramater_type': 'string', 'description': 'The message to send to the campaign team member'}, {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'F
5:24:33 PM worker.1 |  >  unctionProperty', 'name': 'voter_message', 'paramater_type': 'string', 'description': 'The message to send back to the voter when the campaign is alerted'}]}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,826: WARNING/ForkPoolWorker-2] Class in registry: AlertCampaignTeam
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,826: WARNING/ForkPoolWorker-2] Calling from_dict with function_dict: {'name': 'alert_campaign_team', 'description': 'Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.', 'parameters': [{'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the outreach campaign this agent is te
5:24:33 PM worker.1 |  >  xting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'alert_message', 'paramater_type': 'string', 'description': 'The message to send to the campaign team member'}, {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'FunctionProperty', 'name': 'voter_me
5:24:33 PM worker.1 |  >  ssage', 'paramater_type': 'string', 'description': 'The message to send back to the voter when the campaign is alerted'}]}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,826: WARNING/ForkPoolWorker-2] Class not in registry: alert_campaign_team
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,826: WARNING/ForkPoolWorker-2] Description: Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,827: WARNING/ForkPoolWorker-2] Type of parameters_data: <class 'list'>
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,827: WARNING/ForkPoolWorker-2] Value of parameters_data: [{'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'alert_message', 'paramater_type': 'string', 'description': 'The messag
5:24:33 PM worker.1 |  >  e to send to the campaign team member'}, {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'FunctionProperty', 'name': 'voter_message', 'paramater_type': 'string', 'description': 'The message to send back to the voter when the campaign is alerted'}]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,827: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,827: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,828: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'alert_message', 'paramater_type': 'string', 'description': 'The message to send to the campaign team member'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,828: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,828: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'voter_message', 'paramater_type': 'string', 'description': 'The message to send back to the voter when the campaign is alerted'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,828: WARNING/ForkPoolWorker-2] Parameters: [FunctionProperty(name='campaign_id', paramater_type='string', description='The ID of the outreach campaign this agent is texting for'), FunctionProperty(name='voter_id', paramater_type='string', description='The ID of the voter this agent is texting'), FunctionProperty(name='alert_message', paramater_type='string', description='The message to send to the campaign team member'), FunctionProperty(name='inbound_message', paramater_typ
5:24:33 PM worker.1 |  >  e='string', description='The message the voter sent'), FunctionProperty(name='voter_message', paramater_type='string', description='The message to send back to the voter when the campaign is alerted')]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,829: WARNING/ForkPoolWorker-2] Calling from_dict with function_dict: {'class_name': 'EndConversation', 'name': 'end_conversation', 'description': "End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should not be used if the voter is just disinterested.", 'parameters': [{'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramat
5:24:33 PM worker.1 |  >  er_type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'ending_reason', 'paramater_type': 'string', 'description': 'The reason the conversation is ending'}, {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The mess
5:24:33 PM worker.1 |  >  age the voter sent'}]}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,829: WARNING/ForkPoolWorker-2] Class in registry: EndConversation
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,829: WARNING/ForkPoolWorker-2] Calling from_dict with function_dict: {'name': 'end_conversation', 'description': "End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should not be used if the voter is just disinterested.", 'parameters': [{'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description'
5:24:33 PM worker.1 |  >  : 'The ID of the outreach campaign this agent is texting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'ending_reason', 'paramater_type': 'string', 'description': 'The reason the conversation is ending'}, {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}]}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,829: WARNING/ForkPoolWorker-2] Class not in registry: end_conversation
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,830: WARNING/ForkPoolWorker-2] Description: End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should not be used if the voter is just disinterested.
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,830: WARNING/ForkPoolWorker-2] Type of parameters_data: <class 'list'>
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,830: WARNING/ForkPoolWorker-2] Value of parameters_data: [{'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}, {'class_name': 'FunctionProperty', 'name': 'ending_reason', 'paramater_type': 'string', 'description': 'The reason
5:24:33 PM worker.1 |  >   the conversation is ending'}, {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,831: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'campaign_id', 'paramater_type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,831: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'voter_id', 'paramater_type': 'string', 'description': 'The ID of the voter this agent is texting'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,831: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'ending_reason', 'paramater_type': 'string', 'description': 'The reason the conversation is ending'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,831: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,832: WARNING/ForkPoolWorker-2] Parameters: [FunctionProperty(name='campaign_id', paramater_type='string', description='The ID of the outreach campaign this agent is texting for'), FunctionProperty(name='voter_id', paramater_type='string', description='The ID of the voter this agent is texting'), FunctionProperty(name='ending_reason', paramater_type='string', description='The reason the conversation is ending'), FunctionProperty(name='inbound_message', paramater_type='string'
5:24:33 PM worker.1 |  >  , description='The message the voter sent')]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,832: WARNING/ForkPoolWorker-2] Calling from_dict with function_dict: {'class_name': 'GetCandidateInformation', 'name': 'get_candidate_information', 'description': "Get information about a candidates positions or background that you don't already have", 'parameters': [{'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'FunctionProperty', 'name': 'query', 'paramater_type': 'stri
5:24:33 PM worker.1 |  >  ng', 'description': 'The query that you want to search for. Should include a question about a specific policy or background information about the candidate'}, {'class_name': 'FunctionProperty', 'name': 'sender_id', 'paramater_type': 'string', 'description': 'The ID of the sender this agent is texting for'}]}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,832: WARNING/ForkPoolWorker-2] Class in registry: GetCandidateInformation
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,832: WARNING/ForkPoolWorker-2] Calling from_dict with function_dict: {'name': 'get_candidate_information', 'description': "Get information about a candidates positions or background that you don't already have", 'parameters': [{'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'FunctionProperty', 'name': 'query', 'paramater_type': 'string', 'description': 'The query that you w
5:24:33 PM worker.1 |  >  ant to search for. Should include a question about a specific policy or background information about the candidate'}, {'class_name': 'FunctionProperty', 'name': 'sender_id', 'paramater_type': 'string', 'description': 'The ID of the sender this agent is texting for'}]}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,833: WARNING/ForkPoolWorker-2] Class not in registry: get_candidate_information
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,833: WARNING/ForkPoolWorker-2] Description: Get information about a candidates positions or background that you don't already have
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,833: WARNING/ForkPoolWorker-2] Type of parameters_data: <class 'list'>
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,833: WARNING/ForkPoolWorker-2] Value of parameters_data: [{'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}, {'class_name': 'FunctionProperty', 'name': 'query', 'paramater_type': 'string', 'description': 'The query that you want to search for. Should include a question about a specific policy or background information about the candidate'}, {'class_name': 'FunctionProperty', 'name': 'sender_
5:24:33 PM worker.1 |  >  id', 'paramater_type': 'string', 'description': 'The ID of the sender this agent is texting for'}]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,834: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'inbound_message', 'paramater_type': 'string', 'description': 'The message the voter sent'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,834: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'query', 'paramater_type': 'string', 'description': 'The query that you want to search for. Should include a question about a specific policy or background information about the candidate'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,834: WARNING/ForkPoolWorker-2] Processing parameter as a list: {'class_name': 'FunctionProperty', 'name': 'sender_id', 'paramater_type': 'string', 'description': 'The ID of the sender this agent is texting for'}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,835: WARNING/ForkPoolWorker-2] Parameters: [FunctionProperty(name='inbound_message', paramater_type='string', description='The message the voter sent'), FunctionProperty(name='query', paramater_type='string', description='The query that you want to search for. Should include a question about a specific policy or background information about the candidate'), FunctionProperty(name='sender_id', paramater_type='string', description='The ID of the sender this agent is texting for
5:24:33 PM worker.1 |  >  ')]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,835: WARNING/ForkPoolWorker-2] Updated available actions
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,835: WARNING/ForkPoolWorker-2] texting_agent available functions is: {'alert_campaign_team': AlertCampaignTeam(name='alert_campaign_team', description='Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.', parameters=[FunctionProperty(name='campaign_id', paramater_type='string', description='The ID of the outreach campaign this agent 
5:24:33 PM worker.1 |  >  is texting for'), FunctionProperty(name='voter_id', paramater_type='string', description='The ID of the voter this agent is texting'), FunctionProperty(name='alert_message', paramater_type='string', description='The message to send to the campaign team member'), FunctionProperty(name='inbound_message', paramater_type='string', description='The message the voter sent'), FunctionProperty(name='voter_message', paramater_type='string', description='The message to send back to the voter when the camp
5:24:33 PM worker.1 |  >  aign is alerted')], schema={'name': 'alert_campaign_team', 'description': 'Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.', 'parameters': {'type': 'object', 'properties': {'campaign_id': {'type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, 'voter_id': {'type': 'string', 'description': 'The ID of the voter th
5:24:33 PM worker.1 |  >  is agent is texting'}, 'alert_message': {'type': 'string', 'description': 'The message to send to the campaign team member'}, 'inbound_message': {'type': 'string', 'description': 'The message the voter sent'}, 'voter_message': {'type': 'string', 'description': 'The message to send back to the voter when the campaign is alerted'}}, 'required': ['campaign_id', 'voter_id', 'alert_message', 'inbound_message', 'voter_message']}}), 'end_conversation': EndConversation(name='end_conversation', descripti
5:24:33 PM worker.1 |  >  on="End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should not be used if the voter is just disinterested.", parameters=[FunctionProperty(name='campaign_id', paramater_type='string', description='The ID of the outreach campaign this agent is texting for'), FunctionProperty(name='voter_id', paramater_type='string', description='The ID of the voter this 
5:24:33 PM worker.1 |  >  agent is texting'), FunctionProperty(name='ending_reason', paramater_type='string', description='The reason the conversation is ending'), FunctionProperty(name='inbound_message', paramater_type='string', description='The message the voter sent')], schema={'name': 'end_conversation', 'description': "End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should
5:24:33 PM worker.1 |  >   not be used if the voter is just disinterested.", 'parameters': {'type': 'object', 'properties': {'campaign_id': {'type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, 'voter_id': {'type': 'string', 'description': 'The ID of the voter this agent is texting'}, 'ending_reason': {'type': 'string', 'description': 'The reason the conversation is ending'}, 'inbound_message': {'type': 'string', 'description': 'The message the voter sent'}}, 'required': ['campai
5:24:33 PM worker.1 |  >  gn_id', 'voter_id', 'ending_reason', 'inbound_message']}}), 'get_candidate_information': GetCandidateInformation(name='get_candidate_information', description="Get information about a candidates positions or background that you don't already have", parameters=[FunctionProperty(name='inbound_message', paramater_type='string', description='The message the voter sent'), FunctionProperty(name='query', paramater_type='string', description='The query that you want to search for. Should include a quest
5:24:33 PM worker.1 |  >  ion about a specific policy or background information about the candidate'), FunctionProperty(name='sender_id', paramater_type='string', description='The ID of the sender this agent is texting for')], schema={'name': 'get_candidate_information', 'description': "Get information about a candidates positions or background that you don't already have", 'parameters': {'type': 'object', 'properties': {'inbound_message': {'type': 'string', 'description': 'The message the voter sent'}, 'query': {'type':
5:24:33 PM worker.1 |  >   'string', 'description': 'The query that you want to search for. Should include a question about a specific policy or background information about the candidate'}, 'sender_id': {'type': 'string', 'description': 'The ID of the sender this agent is texting for'}}, 'required': ['inbound_message', 'query', 'sender_id']}})}
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,836: WARNING/ForkPoolWorker-2] texting_agent function_schema_array is: [{'name': 'alert_campaign_team', 'description': 'Send an alert to someone who works with the campaign that something needs their attention, like if they need to follow up with someone. Also prepars a message for the voter to send back to them.', 'parameters': {'type': 'object', 'properties': {'campaign_id': {'type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, 'vo
5:24:33 PM worker.1 |  >  ter_id': {'type': 'string', 'description': 'The ID of the voter this agent is texting'}, 'alert_message': {'type': 'string', 'description': 'The message to send to the campaign team member'}, 'inbound_message': {'type': 'string', 'description': 'The message the voter sent'}, 'voter_message': {'type': 'string', 'description': 'The message to send back to the voter when the campaign is alerted'}}, 'required': ['campaign_id', 'voter_id', 'alert_message', 'inbound_message', 'voter_message']}}, {'nam
5:24:33 PM worker.1 |  >  e': 'end_conversation', 'description': "End the conversation with the votera and do not send a response. Can end either because the conversation has reached it's goal or if voter mentions violence or other inappropriate content. This should not be used if the voter is just disinterested.", 'parameters': {'type': 'object', 'properties': {'campaign_id': {'type': 'string', 'description': 'The ID of the outreach campaign this agent is texting for'}, 'voter_id': {'type': 'string', 'description': 'The
5:24:33 PM worker.1 |  >   ID of the voter this agent is texting'}, 'ending_reason': {'type': 'string', 'description': 'The reason the conversation is ending'}, 'inbound_message': {'type': 'string', 'description': 'The message the voter sent'}}, 'required': ['campaign_id', 'voter_id', 'ending_reason', 'inbound_message']}}, {'name': 'get_candidate_information', 'description': "Get information about a candidates positions or background that you don't already have", 'parameters': {'type': 'object', 'properties': {'inbound_m
5:24:33 PM worker.1 |  >  essage': {'type': 'string', 'description': 'The message the voter sent'}, 'query': {'type': 'string', 'description': 'The query that you want to search for. Should include a question about a specific policy or background information about the candidate'}, 'sender_id': {'type': 'string', 'description': 'The ID of the sender this agent is texting for'}}, 'required': ['inbound_message', 'query', 'sender_id']}}]
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,836: WARNING/ForkPoolWorker-2] texting_agent calling get_llm_response_to_conversation
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,843: INFO/MainProcess] Task tasks.process_inbound_message.process_inbound_message[8d78b1f6-771b-4ac9-8c18-a5f0355a043b] received
5:24:33 PM worker.1 |  [2024-09-15 17:24:33,846: INFO/ForkPoolWorker-2] Task tasks.process_inbound_message.process_inbound_message[8d78b1f6-771b-4ac9-8c18-a5f0355a043b] retry: Retry in 30s: StatementError('(builtins.TypeError) Object of type AlertCampaignTeam is not JSON serializable')
^C[WARN] Interrupted by User
[DONE] Killing all processes with signal  SIGINT
5:24:35 PM worker.1 |  worker: Hitting Ctrl+C again will terminate all running tasks!
5:24:35 PM worker.1 |  worker: Warm shutdown (MainProcess)
5:24:35 PM web.1    |  [2024-09-15 17:24:35 -0400] [8151] [INFO] Handling signal: int
5:24:35 PM worker.1 |  worker: Cold shutdown (MainProcess)
5:24:35 PM web.1    |  [2024-09-15 17:24:35 -0400] [8153] [INFO] Worker exiting (pid: 8153)
5:24:35 PM web.1    |  Registering routes
5:24:35 PM web.1    |  Project directory is /Users/oblet/Documents/GitHub/AI-Phone-Bank-POC
5:24:35 PM web.1    |  CORS has been configured
(base) ➜  AI-Phone-Bank-POC git:(anthropic_api) ✗ 5:24:36 PM web.1    |  [2024-09-15 17:24:36 -0400] [8151] [INFO] Shutting down: Master
5:24:36 PM web.1    Exited Successfully
5:24:37 PM worker.1 |  [2024-09-15 17:24:37,458: WARNING/MainProcess] Restoring 1 unacknowledged message(s)
5:24:37 PM worker.1 Exited Successfully
